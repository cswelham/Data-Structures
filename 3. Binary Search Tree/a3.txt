A binary search tree is an abstract data type that supports logarithmic search times.  It does this by organising data in such a way that any key comparison (for finding, inserting or deleting a datum) generally "halves" the search space.
Each node in a BST has a datum and two subtrees (a left and a right).  The datum includes a key that can be compared against other keys (i.e. an ordinal value).  Each subtree is another BST, but any key in the left subtree has a value less than the value at the root, and all keys in the right subtree are greater than the root's key (or possibly "equal to" if duplicate values are allowed, as in the TreeSort algorithm). 
