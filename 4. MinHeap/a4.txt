A heap, as an abstract data type, can be viewed as a minimum height binary tree where the deepest level is filled from left to right ... a so-called leftist tree.  A heap also maintains what we call heap-order .... where every node is the root of a heap (or subheap) and the value at that root has a higher priority than any of its descendants. If a smaller value has a higher priority than a larger one, then we call this a (min)heap.  If a larger value has higher priority then we have a (max)heap.  Note that heap-order is only concerned with the relative order of a value with its descendants ... the relative order of siblings is inconsequential .... either may be larger than the other.  A heap can be used for any ordinal values (i.e. values that can be compared to find out which one comes before the other in an ordering), and can have duplicate values.
